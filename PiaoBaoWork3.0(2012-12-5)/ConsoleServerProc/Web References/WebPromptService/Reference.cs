//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace PbProject.ConsoleServerProc.WebPromptService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebTravelPrintServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebTravelPrintService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripPrintDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidTravelNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripBindDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTripOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback HxStringToStringOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebTravelPrintService() {
            this.Url = global::PbProject.ConsoleServerProc.Properties.Settings.Default.ConsoleServerProc_WebPromptService_WebTravelPrintService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event GetTripPrintDataCompletedEventHandler GetTripPrintDataCompleted;
        
        /// <remarks/>
        public event GetValidTravelNumCompletedEventHandler GetValidTravelNumCompleted;
        
        /// <remarks/>
        public event GetTripBindDataCompletedEventHandler GetTripBindDataCompleted;
        
        /// <remarks/>
        public event SendTripCompletedEventHandler SendTripCompleted;
        
        /// <remarks/>
        public event ExecCommandCompletedEventHandler ExecCommandCompleted;
        
        /// <remarks/>
        public event HxStringToStringCompletedEventHandler HxStringToStringCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UserLogin(string LoginUserName, string LoginPwd) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        LoginUserName,
                        LoginPwd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string LoginUserName, string LoginPwd) {
            this.UserLoginAsync(LoginUserName, LoginPwd, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string LoginUserName, string LoginPwd, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        LoginUserName,
                        LoginPwd}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTripPrintData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTripPrintData(string UserCpyNo, string OrderId, string TicketNum) {
            object[] results = this.Invoke("GetTripPrintData", new object[] {
                        UserCpyNo,
                        OrderId,
                        TicketNum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripPrintDataAsync(string UserCpyNo, string OrderId, string TicketNum) {
            this.GetTripPrintDataAsync(UserCpyNo, OrderId, TicketNum, null);
        }
        
        /// <remarks/>
        public void GetTripPrintDataAsync(string UserCpyNo, string OrderId, string TicketNum, object userState) {
            if ((this.GetTripPrintDataOperationCompleted == null)) {
                this.GetTripPrintDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripPrintDataOperationCompleted);
            }
            this.InvokeAsync("GetTripPrintData", new object[] {
                        UserCpyNo,
                        OrderId,
                        TicketNum}, this.GetTripPrintDataOperationCompleted, userState);
        }
        
        private void OnGetTripPrintDataOperationCompleted(object arg) {
            if ((this.GetTripPrintDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripPrintDataCompleted(this, new GetTripPrintDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetValidTravelNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetValidTravelNum(string UserCpyNo) {
            object[] results = this.Invoke("GetValidTravelNum", new object[] {
                        UserCpyNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidTravelNumAsync(string UserCpyNo) {
            this.GetValidTravelNumAsync(UserCpyNo, null);
        }
        
        /// <remarks/>
        public void GetValidTravelNumAsync(string UserCpyNo, object userState) {
            if ((this.GetValidTravelNumOperationCompleted == null)) {
                this.GetValidTravelNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidTravelNumOperationCompleted);
            }
            this.InvokeAsync("GetValidTravelNum", new object[] {
                        UserCpyNo}, this.GetValidTravelNumOperationCompleted, userState);
        }
        
        private void OnGetValidTravelNumOperationCompleted(object arg) {
            if ((this.GetValidTravelNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidTravelNumCompleted(this, new GetValidTravelNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTripBindData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTripBindData(string OrderId, string CpyNo) {
            object[] results = this.Invoke("GetTripBindData", new object[] {
                        OrderId,
                        CpyNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripBindDataAsync(string OrderId, string CpyNo) {
            this.GetTripBindDataAsync(OrderId, CpyNo, null);
        }
        
        /// <remarks/>
        public void GetTripBindDataAsync(string OrderId, string CpyNo, object userState) {
            if ((this.GetTripBindDataOperationCompleted == null)) {
                this.GetTripBindDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripBindDataOperationCompleted);
            }
            this.InvokeAsync("GetTripBindData", new object[] {
                        OrderId,
                        CpyNo}, this.GetTripBindDataOperationCompleted, userState);
        }
        
        private void OnGetTripBindDataOperationCompleted(object arg) {
            if ((this.GetTripBindDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripBindDataCompleted(this, new GetTripBindDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendTrip", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendTrip(int InsType, string TicketNumber, string TravelNumber, string Office, string PasId, string TripNumId, string LoginName, string CpyNo, string strHeiPingCanShu, string strDaPeiZhiCanShu) {
            object[] results = this.Invoke("SendTrip", new object[] {
                        InsType,
                        TicketNumber,
                        TravelNumber,
                        Office,
                        PasId,
                        TripNumId,
                        LoginName,
                        CpyNo,
                        strHeiPingCanShu,
                        strDaPeiZhiCanShu});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendTripAsync(int InsType, string TicketNumber, string TravelNumber, string Office, string PasId, string TripNumId, string LoginName, string CpyNo, string strHeiPingCanShu, string strDaPeiZhiCanShu) {
            this.SendTripAsync(InsType, TicketNumber, TravelNumber, Office, PasId, TripNumId, LoginName, CpyNo, strHeiPingCanShu, strDaPeiZhiCanShu, null);
        }
        
        /// <remarks/>
        public void SendTripAsync(int InsType, string TicketNumber, string TravelNumber, string Office, string PasId, string TripNumId, string LoginName, string CpyNo, string strHeiPingCanShu, string strDaPeiZhiCanShu, object userState) {
            if ((this.SendTripOperationCompleted == null)) {
                this.SendTripOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTripOperationCompleted);
            }
            this.InvokeAsync("SendTrip", new object[] {
                        InsType,
                        TicketNumber,
                        TravelNumber,
                        Office,
                        PasId,
                        TripNumId,
                        LoginName,
                        CpyNo,
                        strHeiPingCanShu,
                        strDaPeiZhiCanShu}, this.SendTripOperationCompleted, userState);
        }
        
        private void OnSendTripOperationCompleted(object arg) {
            if ((this.SendTripCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTripCompleted(this, new SendTripCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecCommand(string strCmd, string CpyNo, string LoginName, string ServerIP, string ServerPort, string Office) {
            object[] results = this.Invoke("ExecCommand", new object[] {
                        strCmd,
                        CpyNo,
                        LoginName,
                        ServerIP,
                        ServerPort,
                        Office});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecCommandAsync(string strCmd, string CpyNo, string LoginName, string ServerIP, string ServerPort, string Office) {
            this.ExecCommandAsync(strCmd, CpyNo, LoginName, ServerIP, ServerPort, Office, null);
        }
        
        /// <remarks/>
        public void ExecCommandAsync(string strCmd, string CpyNo, string LoginName, string ServerIP, string ServerPort, string Office, object userState) {
            if ((this.ExecCommandOperationCompleted == null)) {
                this.ExecCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecCommandOperationCompleted);
            }
            this.InvokeAsync("ExecCommand", new object[] {
                        strCmd,
                        CpyNo,
                        LoginName,
                        ServerIP,
                        ServerPort,
                        Office}, this.ExecCommandOperationCompleted, userState);
        }
        
        private void OnExecCommandOperationCompleted(object arg) {
            if ((this.ExecCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecCommandCompleted(this, new ExecCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HxStringToString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HxStringToString(string strData) {
            object[] results = this.Invoke("HxStringToString", new object[] {
                        strData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HxStringToStringAsync(string strData) {
            this.HxStringToStringAsync(strData, null);
        }
        
        /// <remarks/>
        public void HxStringToStringAsync(string strData, object userState) {
            if ((this.HxStringToStringOperationCompleted == null)) {
                this.HxStringToStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHxStringToStringOperationCompleted);
            }
            this.InvokeAsync("HxStringToString", new object[] {
                        strData}, this.HxStringToStringOperationCompleted, userState);
        }
        
        private void OnHxStringToStringOperationCompleted(object arg) {
            if ((this.HxStringToStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HxStringToStringCompleted(this, new HxStringToStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTripPrintDataCompletedEventHandler(object sender, GetTripPrintDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripPrintDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripPrintDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetValidTravelNumCompletedEventHandler(object sender, GetValidTravelNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidTravelNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidTravelNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTripBindDataCompletedEventHandler(object sender, GetTripBindDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripBindDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripBindDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SendTripCompletedEventHandler(object sender, SendTripCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTripCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTripCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExecCommandCompletedEventHandler(object sender, ExecCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HxStringToStringCompletedEventHandler(object sender, HxStringToStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HxStringToStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HxStringToStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591